1. **데이터**는 어떤 필요에 의해 수집했지만 아직 특정 목적을 위해 정제하지 않은 값, 사실 또는 자료를 의미합니다.

   **정보**는 수집된  **데이터**를 어떤 목적을 위해 분석, 가공하여 가치를 추가하거나 새로운 의미를 부여한 결과입니다.

2. **데이터 베이스**

   - 구조화된 데이터의 집합
     - 여러사람과 실시간으로 공유하여 사용
     - 효유류적인 데이터 관리
     - 효율적인 데이터 검색
     - 일관성 있는 방법으로 데이터 관리
     - 데이터 누락 및 중복 제거

3. **파일 시스템 방식의 문제**

   - 데이터 중복
   - 응용 프로그램이 개별 데이터를 직접 관리
   - 응용 프로그램이 데이터를 쓰는 방식이 각각 다름 
   - 데이터가 특정 응용 프로그램에 종속되어 있으므로 응용 프로그램을 변경하면 기존 데이터를 사용할 수 없음

   **DBMS를 통한 데이터 관리**

   - 하나의 소프트웨어가 데이터를 관리하므로 데이터 중복을 피할 수 있음
   - 여러 응용 프로그램이 하나의 DBMS를 통해 데이터를 사용하므로 데이터를 동시에 공유할 수 있음
   - 하나의 DBMS를 통해 데이터를 관리하기 때문에 각각의 응용 프로그램이 데이터를 관리하는 방식이 통합됨
   - 응용 프로그램과는 별도로 데이터가 DBMS에 의해 관리 보관되기 
     때문에 응용 프로그램의 업데이트 또는 변경과 관계없이 데이터를 사용할 수 있음

4. 관계형 데이터 모델

1970년 에드거 프랭크 커드가 제안한 모델로서 현대에 가장 많이 사용하는 관계형 데이터베이스의 바탕이 되는 모델입니다. 
관계형 데이터 모델은 다른 모델과 달리 **데이터 간 관계에 초점을 둡니다**. 현재 많이 사용중!
관계형 데이터 모델에서는 이렇게 데이터를 일정 기준으로 나누어 관리합니다. 이를 위해 다양한 개념과 여러 구성요소가
존재합니다. 
[관계형 데이터 모델의 핵심 구성 요소]
- 개체(entity) : 데이터베이스에서 데이터화하려는 사물, 개념의 정보 단위입니다. 관계형 데이터베이스의 테이블(table) 
개념과 대응되며 테이블은 릴레이션(relation)으로 표기하기도 합니다.
- 속성(attribute) : 개체를 구성하는 데이터의 가장 작은 논리적 단위로서 데이터의 종류,특성,상태 등을 정의합니다.
관계형 데이터베이스의 열 개념과 대응됩니다.
- 관계(relationship) : 개체와 개체 또는 속성 간의 연관성을 나타내기 위해 사용합니다. 관계형 데이터베이스에서는 
테이블 간의 관계를 외래키(foreign key) 등으로 구현하여 사용합니다.

이 핵심 구성 요소를 활용하여 데이터의 독립성(independency)과 무결성(integrity)과 같은 데이터를 안전하게
관리하기 위해 필요한 개념들을 정의하게 됩니다. 오라클 데이터베이스를 포함한 여러관계형 데이터베이스가 관계형
데이터 모델을 바탕으로 하고 있다는 정도만 기억하면 됩니다.!!

관계형 데이터베이스는 기본적으로 데이터를 2차원 표형태로 저장하고 관리합니다.

**관계형 데이터에서는 열에서 한가지 데이터만 다룸**
**객체 지향형 데이터에서는 열에서 여러가지 데이터를 다룸**

5. SQL
종류 : 설명
DQL(Data Query Language) : RDBMS에 저장한 데이터를 원하는 방식으로 조회하는 명령어
DML(Data Manipulation Lagnguage) : RDBMS 내 테이블의 데이터를 저장, 수정, 삭제하는 명령어
DDL(Data Definition Language) : RDBMS 내 데이터 관리를 위해 테이블을 포함한 여러 객체를 생성, 수정, 삭제하는 명령어
TCL(Transaction Contril Language) : 트랜잭션 데이터의 영구 저장, 취소 등과 관련된 명령어
DCL(Data Control Language) : 데이터 사용 권한과 관련된 명령어

6. 기본키
기본키(Primary key)는 여러 키 중에서 가장 중요한 키로서 한 테이블 내에서 중복되지 않는 값만 가질 수 있는 키
속성
1. 테이블에 저장된 행을 식별할 수 있는 유일한 값이어야 한다.
2. 값의 중복이 없어야 한다.
3. NULL 값을 가질 수 없다.

7. 외래키
외래키(FK : Foreign Key)는 특정 테이블에 포함되어 있으면서 다른 테이블의 기본키로 지정된 키를 의미합니다.
외래키는 외부키로도 부릅니다. 참조한다고 표현!!

8. 자료형
데이터베이스에 저장하는 데이터는 다양한 형태를 가지고 있습니다. 숫자만으로 표현 가능한 데이터도 있고 여러가지 문자를
포함한 데이터도 있습니다.
자료형 : 설명
VARCHAR(길이) : 4000byte만큼의 가변 길이 문자열 데이터를 저장할 수 있습니다.(최소 크기는 1byte)
NUMBER(전체 자릿수, 소수점이하 자릿수) : +-38자릿수의 숫자를 저장할 수 있습니다.
				      NUMBER(p, s)와 같이 표기할 경우 s자리만큼 소수점 이하 자릿수를 표현하고,
				      이 소수점 자리를 포함한 전체 p자리만큼 숫자 데이터를 저장합니다.
DATE : 날짜 형식을 저장하기 위해 사용하는 자료형으로 세기, 연, 월, 일, 시, 분, 초 저장이 가능합니다.
CHAR(길이) : 4000byte만큼의 고정 길이 문자열 데이터를 저장할 수 있습니다.(최소크기는 1byte)
NVARCHAR2(길이) : 4000byte만큼의 가변 길이 국가별 문자 세트 데이터를 저장할 수 있습니다.(최소 크기는 1byte)
BLOB(Binary Large Object) : 최대 크기 4GB의 대용량 이진 데이터를 저장할 수 있습니다.
CLOB(Char Large Object) : 최대 크기 4GB 대용량 텍스트 데이터를 저장할 수 있습니다.
BFILE : 최대 크기 4GB의 대용량 이진 데이터 파일을 저장할 수 있습니다.

9. DESC
테이블 구조 보는 명령어

10. 테이블 이름 생성 규칙
 1) 테이블 이름은 문자로 시작해야 한다.(한글도 가능하며 숫자로 시작할 수 없음)
    ex) EMP90 (O), 90EMP (X)
 2) 테이블 이름은 30byte이하여야 한다.(즉 영어는 30자, 한글은 15자까지 사용 가능)
 3) 같은 사용자 소유의 테이블 이름은 중복될 수 없다.(SCOTT 계정에 두 EMP 테이블은 존재할 수 없음)
 4) 테이블 이름은 영문자(한글 가능), 숫자(0~9)와 특수 문자 $, #, _를 사용할 수 있다.
   ex) EMP#90_OB
 5) SQL 키워드는 테이블 이름으로 사용할 수 없다.(SELECT, FROM 등은 테이블 이름으로 사용 불가)



